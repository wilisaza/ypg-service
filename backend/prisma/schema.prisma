// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ===================================================================
// MODELOS DE USUARIO Y AUTENTICACIÓN
// ===================================================================
model User {
  id         String    @id @default(uuid())
  username   String    @unique
  password   String
  fullName   String
  email      String    @unique
  role       Role      @default(USER)
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  accounts   Account[]
}

enum Role {
  USER
  ADMIN
}

// ===================================================================
// MODELO DE PRODUCTO (Plantilla Simplificada)
// ===================================================================
model Product {
  id           Int         @id @default(autoincrement())
  name         String      @unique
  type         ProductType
  description  String?
  interestRate Float?      // Tasa de interés anual (ej: 0.05 para 5%)
  minBalance   Float?
  maxBalance   Float?
  monthlyFee   Float?      // Cuota de manejo mensual o interés mensual fijo
  penaltyRate  Float?      // Tasa de multa por atraso (ej: 2% sobre la cuota)
  graceDays    Int?        @default(5)
  loanType     LoanType?   // Tipo de modalidad de crédito
  
  // Campos específicos para planes de ahorro
  monthlyAmount    Float?     // Monto mensual fijo del plan de ahorro
  billingDay       Int?       // Día del mes para cobro (1-30)
  penaltyAmount    Float?     // Multa fija en pesos por atraso
  startMonth       Int?       // Mes de inicio del plan (1-12)
  endMonth         Int?       // Mes de fin del plan (1-12)
  planYear         Int?       // Año del plan de ahorro
  
  accounts     Account[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  isActive     Boolean     @default(true)
}

enum ProductType {
  SAVINGS
  LOAN
}

enum LoanType {
  FRENCH_SYSTEM      // Sistema francés (cuota fija)
  VARIABLE_CAPITAL   // Capital variable con interés mensual fijo
}

// ===================================================================
// MODELO DE CUENTA (El Corazón del Sistema)
// ===================================================================
model Account {
  id           String        @id @default(uuid())
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  product      Product       @relation(fields: [productId], references: [id])
  productId    Int
  balance      Float         @default(0)
  loanDetails  LoanDetails?
  savingsGoal  Float?
  status       AccountStatus @default(ACTIVE)
  openedAt     DateTime      @default(now())
  closedAt     DateTime?
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

enum AccountStatus {
  ACTIVE
  DORMANT
  CLOSED
  BLOCKED
}

// ===================================================================
// DETALLES DE PRÉSTAMO
// ===================================================================
model LoanDetails {
  id                   String     @id @default(uuid())
  account              Account    @relation(fields: [accountId], references: [id])
  accountId            String     @unique
  principalAmount      Float      // Monto original del préstamo
  currentBalance       Float      // Saldo actual de capital pendiente
  termMonths           Int        // Plazo en meses
  monthlyPayment       Float?     // Cuota mensual (solo para sistema francés)
  interestRate         Float      // Tasa de interés anual
  monthlyInterestAmount Float?    // Interés mensual fijo (para capital variable)
  disbursementDate     DateTime?  // Fecha de desembolso
  maturityDate         DateTime?  // Fecha de vencimiento (máximo 30 nov)
  amortizationSchedule Json?      // Tabla de amortización (sistema francés)
  loanType             LoanType   @default(FRENCH_SYSTEM)
}

// ===================================================================
// MODELO DE TRANSACCIÓN (Simplificado y Potente)
// ===================================================================
model Transaction {
  id          String            @id @default(uuid())
  account     Account           @relation(fields: [accountId], references: [id])
  accountId   String
  amount      Float
  type        TransactionType
  status      TransactionStatus @default(COMPLETED)
  date        DateTime          @default(now())
  description String?
  dueDate     DateTime?
  month       Int?
  year        Int?
  updatedAt   DateTime          @updatedAt
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  INTEREST_ACCRUED      // Intereses devengados (diarios)
  INTEREST_PAYMENT      // Pago de intereses
  LOAN_DISBURSEMENT
  LOAN_PAYMENT          // Pago de capital
  FEE_PAYMENT
  PENALTY_FEE
  MANAGEMENT_FEE
  ADJUSTMENT_CREDIT
  ADJUSTMENT_DEBIT
}

enum TransactionStatus {
  PENDING
  COMPLETED
  OVERDUE
  CANCELED
}


